<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.promise.demo.db.dao.UsersDao">
    <resultMap id="users" type="com.promise.demo.db.model.Users">
            <id property="userId" column="user_id"/>
            <result property="userName" column="user_name"/>
            <result property="userPassword" column="user_password"/>
            <result property="userEmail" column="user_email"/>
            <result property="status" column="status"/>
            <result property="userType" column="user_type"/>
    </resultMap>

    <sql id="columns">
            `user_id` ,`user_name` ,`user_password` ,`user_email` ,`status` ,`user_type`
    </sql>

    <insert id="insert">
        insert into `users`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                `user_id`,
            </if>
            <if test="userName != null">
                `user_name`,
            </if>
            <if test="userPassword != null">
                `user_password`,
            </if>
            <if test="userEmail != null">
                `user_email`,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="userType != null">
                `user_type`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
            #{userId} ,
            </if>
            <if test="userName != null">
            #{userName} ,
            </if>
            <if test="userPassword != null">
            #{userPassword} ,
            </if>
            <if test="userEmail != null">
            #{userEmail} ,
            </if>
            <if test="status != null">
            #{status} ,
            </if>
            <if test="userType != null">
            #{userType} ,
            </if>
        </trim>
    </insert>

    <delete id="deleteById">
        delete from `users`
        where `id` = #{id}
    </delete>

    <delete id="delete">
        delete from `users`
        <trim prefix="where " prefixOverrides="and ">
            <if test="userId != null">
                and `user_id` = #{userId}
            </if>
            <if test="userName != null">
                and `user_name` = #{userName}
            </if>
            <if test="userPassword != null">
                and `user_password` = #{userPassword}
            </if>
            <if test="userEmail != null">
                and `user_email` = #{userEmail}
            </if>
            <if test="status != null">
                and `status` = #{status}
            </if>
            <if test="userType != null">
                and `user_type` = #{userType}
            </if>
        </trim>
    </delete>

    <delete id="deleteByIds">
        delete from `users`
        where `id` in
        <foreach collection="ids" open="(" item="id" separator="," close=")">
        #{id}
        </foreach>
    </delete>

    <update id="update">
        update `users`
        <set>
                <if test="userName != null">
                    `user_name` = #{userName},
                </if>
                <if test="userPassword != null">
                    `user_password` = #{userPassword},
                </if>
                <if test="userEmail != null">
                    `user_email` = #{userEmail},
                </if>
                <if test="status != null">
                    `status` = #{status},
                </if>
                <if test="userType != null">
                    `user_type` = #{userType},
                </if>
        </set>
        where id = #{id}
    </update>

    <select id="getById" resultMap="users">
        select
        <include refid="columns" />
        from `users`
        where `id` = #{id}
    </select>

    <select id="list" resultMap="users">
        select
        <include refid="columns" />
        from `users`
        <trim prefix="where " prefixOverrides="and ">
            <if test="userId != null">
                and `user_id` = #{userId}
            </if>
            <if test="userName != null">
                and `user_name` = #{userName}
            </if>
            <if test="userPassword != null">
                and `user_password` = #{userPassword}
            </if>
            <if test="userEmail != null">
                and `user_email` = #{userEmail}
            </if>
            <if test="status != null">
                and `status` = #{status}
            </if>
            <if test="userType != null">
                and `user_type` = #{userType}
            </if>
        </trim>
    </select>
</mapper>